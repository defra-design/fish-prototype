2023-01-09T10:10:34.047Z
cwd: ~/Documents/GitHub/fish-prototype
package: govuk-prototype-kit@13.1.0
argv: /usr/local/bin/node ~/.npm/_npx/ab0cb2c39bc0319f/node_modules/.bin/govuk-prototype-kit migrate
Started [Check migration is being applied to a pre v13 prototype]
Succeeded [Check migration is being applied to a pre v13 prototype]
2023-01-09T10:10:40.724Z
cwd: ~/Documents/GitHub/fish-prototype
package: govuk-prototype-kit@13.1.0
argv: /usr/local/bin/node ~/Documents/GitHub/fish-prototype/node_modules/.bin/govuk-prototype-kit migrate -- ~/Documents/GitHub/fish-prototype
Started [Migrate config.js to config.json]
Started [Update application SCSS file]
Started [Deleted files that are no longer needed]
Started [Deleted directories that are no longer needed]
Started [Delete listen-on-port.js]
Started [Delete server.js]
Started [Delete start.js]
Started [Delete gulpfile.js]
Started [Delete VERSION.txt]
Started [Delete Procfile]
Started [Delete app/assets/sass/application-ie8.scss]
Started [Delete app/assets/sass/unbranded-ie8.scss]
Started [Remove unused directory docs]
Started [Remove unused directory gulp]
Started [Remove unused directory lib]
Started [Remove unused directory public]
Succeeded [Migrate config.js to config.json]
Started [Overwrite app/assets/javascripts/application.js]
Started [Overwrite app/filters.js]
Started [Overwrite app/views/layout.html]
Succeeded [Delete listen-on-port.js]
Succeeded [Delete server.js]
Succeeded [Delete start.js]
Succeeded [Delete gulpfile.js]
Succeeded [Delete VERSION.txt]
Succeeded [Delete app/assets/sass/application-ie8.scss]
Succeeded [Delete Procfile]
Succeeded [Delete app/assets/sass/unbranded-ie8.scss]
Copying from [node_modules/govuk-prototype-kit/prototype-starter/app/assets/javascripts/application.js] to [app/assets/javascripts/application.js]
Failed [Overwrite app/filters.js]
Started [Delete app/assets/images/separator-2x.png]
Failed [Overwrite app/views/layout.html]
Started [Delete app/assets/images/unbranded.ico]
Started [Delete app/assets/javascripts/auto-store-data.js]
Started [Delete app/assets/images/separator.png]
Started [Delete app/assets/sass/unbranded.scss]
Started [Delete app/assets/javascripts/jquery-1.11.3.js]
Started [Delete app/views/includes/breadcrumb_examples.html]
Started [Delete app/views/layout_unbranded.html]
Started [Delete app/views/includes/cookie-banner.html]
Started [Delete app/assets/sass/patterns/_related-items.scss]
Started [Delete app/assets/sass/patterns/_step-by-step-header.scss]
Started [Delete app/assets/sass/patterns/_step-by-step-related.scss]
Started [Delete app/assets/sass/patterns/_step-by-step-nav.scss]
Started [Delete app/assets/sass/patterns/_task-list.scss]
Succeeded [Deleted files that are no longer needed]
Failed [Overwrite app/filters.js]
Found [// Add your routes here - above the module.exports line] in [app/routes.js], replacing
Found [// Add extra styles here, or re-organise the Sass files in whichever way makes most sense to you] in [app/assets/sass/application.scss], replacing
Keeping these lines from old file
Keeping these lines from old file
Succeeded [Remove unused directory gulp]
Succeeded [Delete app/assets/sass/unbranded.scss]
Succeeded [Delete app/assets/javascripts/auto-store-data.js]
Succeeded [Delete app/assets/images/unbranded.ico]
Succeeded [Delete app/assets/images/separator-2x.png]
Succeeded [Delete app/assets/images/separator.png]
Succeeded [Delete app/assets/javascripts/jquery-1.11.3.js]
Succeeded [Delete app/assets/sass/patterns/_related-items.scss]
Succeeded [Delete app/assets/sass/patterns/_step-by-step-header.scss]
Succeeded [Delete app/assets/sass/patterns/_step-by-step-related.scss]
Succeeded [Delete app/views/layout_unbranded.html]
Succeeded [Delete app/views/includes/cookie-banner.html]
Succeeded [Delete app/views/includes/breadcrumb_examples.html]
Succeeded [Delete app/assets/sass/patterns/_step-by-step-nav.scss]
Succeeded [Delete app/assets/sass/patterns/_task-list.scss]
Started [Delete app/views/includes/scripts.html]
Started [Delete app/views/includes/head.html]
Succeeded [Update application SCSS file]
Failed [Delete app/views/includes/scripts.html]
Failed [Delete app/views/includes/head.html]
//,// For guidance on how to create routes see:,// https://prototype-kit.service.gov.uk/docs/create-routes,//,,const govukPrototypeKit = require('govuk-prototype-kit'),const router = govukPrototypeKit.requests.setupRouter(),,// Add your routes here,,,// GAFL routes,/// //////////////////////////////////////////////////////////,,const getPrototypeToUse = request => {,  const referrer = new URL(request.headers.referer),  const [prototypeToUse] = /\/.*\//.exec(referrer.pathname),  const strippedSlashes = prototypeToUse.replace(/\//g, ''),  return strippedSlashes,},,router.post('/check-licence-type', function (req, res) {,  // Make a variable from session data,  let licenceType = req.session.data['licence-type'],  // route depending on value,  // i am not sure why we have this…,  if (licenceType === 'Trout and coarse, up to 3 rods') {,    res.redirect('gafl/licence-summary'),  } else if (licenceType === 'Salmon and sea trout') {,    res.redirect('gafl/licence-length?rcr=true'),  } else {,    res.redirect('gafl/licence-length'),  },}),,// routing for digital/paper licence,router.post('/check-licence-option', function (req, res) {,  // Make a variable from session data,  let licenceOption = req.session.data['licence-option'],  // route depending on value,  if (licenceOption === 'digital') {,    // res.redirect('gafl/add-email'),    res.redirect('gafl/licence-by'),  } else {,    res.redirect('gafl/licence-confirmation'),  },}),,// Multibuy routes,/// //////////////////////////////////////////////////////////,,// bobo-multibuy,// buying on behalf of variation in the H1s,// more generic body content (in preparation for our bilingual work),,// ‘Who is the licence for?’ logic,//,// logic for when other licence is bought,,// is the licence for the same user?,// who is that user?,,// if you say it is for you,// and you were the last person,// then angler is same,,// if you say it is for you,// and you were not the last person,// then angler is same,,// if you say other,// how can we know it is the same other?,// check name,,// Routing for ‘Who is the licence for?’ radio options,router.post('/licenceHolder', function (req, res) {,  // Make a variable from session data,  let source = req.session.data['source'],  let licenceFor = req.session.data['licenceFor'],  let lastLicenceFor = req.session.data['lastLicenceFor'],  const prototypeToUse = getPrototypeToUse(req),,  if (licenceFor) {,    // if I have just started,    if (source === 'gafl') {,      // new licence, ask all the questions,      res.redirect(`/${prototypeToUse}/name?error=`),,    // multi-buy,    } else {,      // work out if we need to skip the details that already exists,,      // if the licence is for the named Angler (another person),      // skip questions and set angler to 'same',,      if (licenceFor == 'same-other') {,        // reset source to gafl incase it was changed last round,        // licence is for another person, the same angler as last time,        // skips the name question,        // sets angler to same,        res.redirect(`/${prototypeToUse}/start-kind?source=gafl&angler=same&error=&licenceFor=other`),,        // if the licence is for a new 'other' (not named),      } else if (licenceFor == 'other') {,        // reset source to gafl,        // licence is for the new angler, other person,        // ask all the questions,        // sets angler to same,        res.redirect(`/${prototypeToUse}/name?source=gafl&angler=new&error=&licenceFor=other`),      } else {,        // if the licence is for You,        // and the last one was for You,        // licence for user,        // skip questions,        // angler = same,,        // licence is for 'user',        // has the user entered information about you before?,        if (lastLicenceFor == 'you') {,          // YES,,          // licence is for the same angler, the user,          // reset source to gafl,          res.redirect(`/${prototypeToUse}/start-kind?source=gafl&angler=same&error=&licenceFor=user`),        } else {,          // NO,,          // licence is for You, the last round wasn't,          res.redirect(`/${prototypeToUse}/name?source=gafl&angler=new&error=&licenceFor=user`),        },      },    } // if source is gafl / else multibuy,  } else { // is licenceFor true?,    res.redirect(`/${prototypeToUse}/who-is-this-licence-for?error=1`),  },}),,router.post('/multibuy-check-licence-type', function (req, res) {,  const prototypeToUse = getPrototypeToUse(req),,  // Make a variable from session data,  let licenceType = req.session.data['licence-type'],  // route depending on value,  // i am not sure why we have this…,  if (licenceType === 'Trout and coarse, up to 3 rods') {,    res.redirect(`/${prototypeToUse}/licence-summary`),  } else if (licenceType === 'Salmon and sea trout') {,    res.redirect(`/${prototypeToUse}/licence-length?rcr=true`),  } else {,    res.redirect(`/${prototypeToUse}/licence-length`),  },}),,// routing for the paperless question screen,router.post('/multibuy-check-licence-option', function (req, res) {,  const prototypeToUse = getPrototypeToUse(req),  // Make a variable from session data,  let licenceOption = req.session.data['licence-option'],  // route depending on value,  if (licenceOption === 'digital') {,    // res.redirect('gafl/add-email'),    res.redirect(`/${prototypeToUse}/licence-by`),  } else {,    res.redirect(`/${prototypeToUse}/licence-confirmation`),  },}),,// check to route someone who wants to buy other licence,router.post('/multibuy-add-licence', function (req, res) {,  // make variables from the session data,  let licences = req.session.data['licences'],  let allLicences = req.session.data['allLicences'],,  let firstName = req.session.data['firstName'],  let lastName = req.session.data['last-name'],  let type = req.session.data['licence-type'],  let length = req.session.data['licence-length'],  let concession = req.session.data['concession'],,  // make an object to hold the data,  let lastLicenceData = {,    firstName,,    lastName,,    type,,    length,,    concession,  },,  // add the data to an object called licences,  allLicences.push(lastLicenceData),,  // increment licence numbers,  if (licences === 1) {,    req.session.data.licences = 2,  } else if (licences === 2) {,    req.session.data.licences = 3,  } else if (licences === 3) {,    req.session.data.licences = 4,  } else if (licences > 3) {,    req.session.data.licences = 5 // hardcoded max of 5,  } else {,    req.session.data.licences = 1,  },,  // go to the screen that asks if you want another licence,  res.redirect(`/${getPrototypeToUse(req)}/add-another-licence`),}),,// check to route someone who wants to buy other licence,router.post('/multibuy-add-licences', function (req, res) {,  const prototypeToUse = getPrototypeToUse(req),  // Make a variable from session data,  let addLicence = req.session.data['add-licence'],  let newTerms = req.session.data['terms'],,  if (addLicence) {,    // move variables used in the flow into memory,,    // declare the object holding the data,    let allLicences = req.session.data['allLicences?error='],,    // route depending on value,    if (addLicence === 'yes') {,      // another licence,,      req.session.data.source = 'multibuy',      // req.session.data.licenceFor = '';,,      // rename variables and use server side changes,,      // redirect, clears variables,      res.redirect(`/${prototypeToUse}/who-is-this-licence-for?licenceFor=&email=&error=&phone-number=`),    } else {,      if (newTerms) {,        // finish up, skip terms,        res.redirect(`/${prototypeToUse}/licence-conditions-notice`),      } else {,        // finish up, show terms,        res.redirect(`/${prototypeToUse}/licence-terms`),      },    },  } else {,    // nothing selected,    res.redirect(`/${prototypeToUse}/add-another-licence?error=1`),  },}),,// bobo-multibuy-2021-12,/// //////////////////////////////////////////////////////////,,// more variation for buying on behalf of content,,router.post('/licenceFor', function (req, res) {,  const prototypeToUse = getPrototypeToUse(req),  // Make a variable from session data,  let source = req.session.data['source'],  let licenceFor = req.session.data['licenceFor'],  let lastLicenceFor = req.session.data['lastLicenceFor'],,  if (licenceFor) {,    // if I have just started,    if (source === 'gafl') {,      // new licence, ask all the questions,      res.redirect(`/${prototypeToUse}/name?error=`),,    // multi-buy,    } else {,      // work out if we need to skip the details that already exists,,      // if the licence is for the named Angler (another person),      // skip questions and set angler to 'same',,      if (licenceFor == 'same-other') {,        // reset source to gafl incase it was changed last round,        // licence is for another person, the same angler as last time,        // skips the name question,        // sets angler to same,        res.redirect(`/${prototypeToUse}/start-kind?source=gafl&angler=same&error=&licenceFor=other`),,        // if the licence is for a new 'other' (not named),      } else if (licenceFor == 'other') {,        // reset source to gafl,        // licence is for the new angler, other person,        // ask all the questions,        // sets angler to same,        res.redirect(`/${prototypeToUse}/name?source=gafl&angler=new&error=&licenceFor=other`),      } else {,        // if the licence is for You,        // and the last one was for You,        // licence for user,        // skip questions,        // angler = same,,        // licence is for 'user',        // has the user entered information about you before?,        if (lastLicenceFor == 'you') {,          // YES,,          // licence is for the same angler, the user,          // reset source to gafl,          res.redirect(`/${prototypeToUse}/start-kind?source=gafl&angler=same&error=&licenceFor=user`),        } else {,          // NO,,          // licence is for You, the last round wasn't,          res.redirect(`/${prototypeToUse}/name?source=gafl&angler=new&error=&licenceFor=user`),        },      },    } // if source is gafl / else multibuy,  } else { // is licenceFor true?,    res.redirect(`/${prototypeToUse}/who-is-this-licence-for?error=1`),  },}),,// route for the licence type radio options,//,router.post('/multibuy-check-licence-type-21-12', function (req, res) {,  const prototypeToUse = getPrototypeToUse(req),  // Make a variable from session data,  let licenceType = req.session.data['licence-type'],  // route depending on value,  // i am not sure why we have this…,  if (licenceType === 'Trout and coarse, up to 3 rods') {,    res.redirect(`/${prototypeToUse}/licence-summary`),  } else if (licenceType === 'Salmon and sea trout') {,    res.redirect(`/${prototypeToUse}/licence-length?rcr=true`),  } else {,    res.redirect(`/${prototypeToUse}/licence-length`),  },}),,router.post('/multibuy-check-licence-option-21-12', function (req, res) {,  const prototypeToUse = getPrototypeToUse(req),  // Make a variable from session data,  let licenceOption = req.session.data['licence-option'],  // route depending on value,  if (licenceOption === 'digital') {,    // res.redirect('gafl/add-email'),    res.redirect(`/${prototypeToUse}/licence-by`),  } else {,    res.redirect(`/${prototypeToUse}/licence-confirmation`),  },}),,// check to route someone who wants to buy other licence,router.post('/multibuy-add-licence', function (req, res) {,  // make variables from the session data,  let licences = req.session.data['licences'],  let allLicences = req.session.data['allLicences'],,  let firstName = req.session.data['firstName'],  let lastName = req.session.data['last-name'],  let type = req.session.data['licence-type'],  let length = req.session.data['licence-length'],  let concession = req.session.data['concession'],,  // make an object to hold the data,  let lastLicenceData = {,    firstName,,    lastName,,    type,,    length,,    concession,  },,  // add the data to an object called licences,  allLicences.push(lastLicenceData),,  // increment licence numbers,  if (licences === 1) {,    req.session.data.licences = 2,  } else if (licences === 2) {,    req.session.data.licences = 3,  } else if (licences === 3) {,    req.session.data.licences = 4,  } else if (licences > 3) {,    req.session.data.licences = 5 // hardcoded max of 5,  } else {,    req.session.data.licences = 1,  },,  // go to the screen that asks if you want another licence,  res.redirect(`/${getPrototypeToUse(req)}/add-another-licence`),}),,// check to route someone who wants to buy other licence,router.post('/multibuy-add-licences', function (req, res) {,  const prototypeToUse = getPrototypeToUse(req),  // Make a variable from session data,  let addLicence = req.session.data['add-licence'],  let newTerms = req.session.data['terms'],,  if (addLicence) {,    // move variables used in the flow into memory,,    // declare the object holding the data,    let allLicences = req.session.data['allLicences?error='],,    // route depending on value,    if (addLicence === 'yes') {,      // another licence,,      req.session.data.source = 'multibuy',      // req.session.data.licenceFor = '';,,      // rename variables and use server side changes,,      // redirect, clears variables,      res.redirect(`/${prototypeToUse}/who-is-this-licence-for?licenceFor=&email=&error=&phone-number=`),    } else {,      if (newTerms) {,        // finish up, skip terms,        res.redirect(`/${prototypeToUse}/licence-conditions-notice`),      } else {,        // finish up, show terms,        res.redirect(`/${prototypeToUse}/licence-terms`),      },    },  } else {,    // nothing selected,    res.redirect(`/${prototypeToUse}/add-another-licence?error=1`),  },}),,// Renew routes,/// //////////////////////////////////////////////////////////,,// additional routing for renew,router.post('/renew-check-licence-option', function (req, res) {,  // Make a variable from session data,  let licenceOption = req.session.data['licence-option'],  // route depending on value,  if (licenceOption === 'digital') {,    // res.redirect('gafl/add-email'),    res.redirect('renew/licence-by?licenceBy=&confirmation=&email=sam.fisher@email.com&phone='),  } else {,    res.redirect('renew/licence-confirmation?licenceBy=&confirmation=&email=sam.fisher@email.com&phone='),  },}),,// routing for changed digital/paper licence,router.post('/check-change-licence-type', function (req, res) {,  const prototypeToUse = getPrototypeToUse(req),  // Make a variable from session data,  let licenceOption = req.session.data['licence-option'],  // route depending on value,  if (licenceOption === 'digital') {,    res.redirect(`${prototypeToUse}/change-licence-by`),  } else {,    res.redirect(`${prototypeToUse}/contact-summary`),  },}),,router.post('/service-start-routing', function (req, res) {,  const prototypeToUse = getPrototypeToUse(req),  // Make a variable from session data,  let serviceOption = req.session.data['option'],  // route depending on value,  if (serviceOption === 'new') {,    res.redirect(`${prototypeToUse}/date-of-birth`),  } else {,    res.redirect('renew/check-licence-holder'),  },}),,,,,router.post('/gafl-recurring-payments/payment-options-form', function (req, res) {,  // const prototypeToUse = getPrototypeToUse(req),  // Make a variable from session data,  let paymentOption = req.session.data['payment-options-radio'],  // route depending on value,  if (paymentOption === 'single-payment') {,    res.redirect('payment-details'),  } else {,    res.redirect('gafl-recurring-payments/will-a-chick-do'),  },}),,,,module.exports = router,
Found [module.exports = router;,module.exports = router] in [app/routes.js], removing
Succeeded [Remove unused directory public]
Succeeded [Remove unused directory lib]
Succeeded [Overwrite app/assets/javascripts/application.js]
Succeeded [Update routes file]
Succeeded [Remove unused directory docs]
Succeeded [Deleted directories that are no longer needed]
Started [Remove old pattern includes from application SCSS file]
Succeeded [Remove old pattern includes from application SCSS file]
Started [Remove empty directory app/assets/sass/patterns]
Started [Remove empty directory app/views/includes]
Started [Remove empty directory app/assets/images]
Skipped deleting app/assets/sass/patterns
Skipped deleting app/assets/images
Skipped deleting app/views/includes
